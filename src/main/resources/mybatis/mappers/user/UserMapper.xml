<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.framework.demo.mapper.user.UserMapper">


    <select id="findUserByUserEmailAndServiceId" resultType="com.framework.demo.model.user.vo.UserVo">
        SELECT *
        FROM  USER
        WHERE USER_EMAIL = #{userEmail} AND SERVICE_ID = #{serviceId}
    </select>


    <select id="findUserByUid" resultType="com.framework.demo.model.user.vo.UserVo">
        SELECT *
        FROM USER
        WHERE UID = #{uid}
    </select>

    <select id="findUserByPhone" resultType="com.framework.demo.model.user.vo.UserVo">
        SELECT *
        FROM USER
        WHERE PHONE = #{phone}
    </select>

    <select id="findUserByUsername" resultType="com.framework.demo.model.user.vo.UserVo">
        SELECT *
        FROM  USER
        WHERE USER_EMAIL = #{username}
    </select>

    <select id="findUserByUserEmail" resultType="com.framework.demo.model.user.vo.UserVo">
        SELECT *
        FROM  USER
        WHERE USER_EMAIL = #{userEmail}
    </select>

    <insert id="join" parameterType="com.framework.demo.model.user.dto.JoinDto">
        INSERT INTO USER
        (
        UID,
        USER_EMAIL,
        PASSWORD,
        NAME,
        PHONE,
        SERVICE_ID,
        ROLE_ID,
        TYPE,
        CREATE_DT
        )
        VALUES
        (
        #{uid},
        #{userEmail},
        #{password},
        #{name},
        #{phone},
        #{serviceId},
        #{roleId},
        #{type},
        DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
        )
    </insert>

    <insert id="addSession" parameterType="com.framework.demo.model.user.dto.AddSessionDto">
        INSERT INTO SESSION
        (
        UID,
        ACCESS_IP,
        SESSION_ID,
        STATUS,
        CREATE_DT
        )
        VALUES
        (
        #{uid},
        #{accessIp},
        #{sessionId},
        #{status},
        DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
        )
    </insert>



    <update id="modifyIsLogin" parameterType="com.framework.demo.model.user.dto.IsLoginDto">
        UPDATE BCF_LOGIN_STATUS
        SET IS_LOGIN = #{loginStatus},
        UPDATE_DT = DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
        WHERE UID = #{uid}
    </update>

    <insert id="saveIsLogin" parameterType="com.framework.demo.model.user.dto.IsLoginDto">
        INSERT INTO BCF_LOGIN_STATUS
        (
        UID,
        USER_ID,
        TYPE,
        IS_LOGIN,
        CREATE_DT
        )
        VALUES
        (
        #{uid},
        #{userId},
        #{type},
        #{isLogin},
        DATE_FORMAT(NOW(), '%Y%m%d%H%i%s')
        )
    </insert>

    <update id="modifyMyAccount" parameterType="com.framework.demo.model.user.dto.ModifyMyAccountDto">
        UPDATE BCF_USER
        SET
        UPDATE_DT = DATE_FORMAT(NOW(), '%Y%m%d%H%i%s'),
        <if test="name != null">
            NAME = #{name},
        </if>
        <if test="phone != null">
            PHONE = #{phone}
        </if>
        WHERE UID = #{uid}
    </update>

    <select id="findManagementUsers" resultType="com.framework.demo.model.admin.vo.ManagementUserVo">
        SELECT @num:=@num+1 as NO, U.UID, U.USER_EMAIL, U.NAME, U.PHONE, U.TYPE, U.LOCK_YN, R.ROLE, R.SUB_ROLE
        FROM (SELECT @num:=0) as n,USER U
        LEFT JOIN ROLES R ON R.ID = U.ROLE_ID
        <where>
            <if test="option == 'name' and searchValue != null">
                U.NAME LIKE CONCAT('%',#{searchValue},'%')
            </if>
            <if test="option == 'userEmail' and searchValue != null">
                U.USER_EMAIL LIKE CONCAT('%',#{searchValue},'%')
            </if>
            <if test="option == 'phone' and searchValue != null">
                u.PHONE LIKE CONCAT('%',#{searchValue},'%')
            </if>
        </where>
    </select>




</mapper>