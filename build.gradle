plugins {
	id 'org.springframework.boot' version '2.7.5'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'java'
}

group = 'com.framework'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-web-services'
	implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:2.2.2'

	// API 파라미터 유효성 @Valid (유효성 검사) 사용을 위한 라이브러리
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// OpenApi (swagger-ui)
	implementation 'org.springdoc:springdoc-openapi-ui:1.6.11'

	// Database Connection Pools
	implementation 'org.apache.commons:commons-dbcp2:2.7.0'

	// JWT APi
	implementation 'io.jsonwebtoken:jjwt:0.9.1'

	// build.gradle
	implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.7.1'

	// Junit의 클래스와 메소드들을 사용하기 위한 API
	testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
	testCompileOnly 'junit:junit:4.12'
	testRuntimeOnly 'org.junit.vintage:junit-vintage-engine:5.3.1'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
}

test {
	useJUnitPlatform()
}

tasks.named('test') {
	useJUnitPlatform()
}
